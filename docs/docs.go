// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/book": {
            "post": {
                "description": "Create Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Create Book",
                "parameters": [
                    {
                        "description": "Create Book",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.CreateBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created Book",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/{bid}": {
            "get": {
                "description": "Get Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Get Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Book",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Delete Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Book",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Update Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Book",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.UpdateBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Book",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/{bid}/accountTitle": {
            "post": {
                "description": "Create Account Title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Title"
                ],
                "summary": "Create Account Title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Account Title",
                        "name": "accountTitle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.CreateAccountTitleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Account Title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/{bid}/accountTitle/{tid}": {
            "get": {
                "description": "Get Account Title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Title"
                ],
                "summary": "Get Account Title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account Title ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Account Title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Account Title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Title"
                ],
                "summary": "Delete Account Title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account Title ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Account Title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Account Title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Title"
                ],
                "summary": "Update Account Title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account Title ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Account Title",
                        "name": "accountTitle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.UpdateAccountTitleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Account Title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/{bid}/transaction": {
            "get": {
                "description": "Get Transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions was found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created Transaction",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/{bid}/transaction/page/{pid}": {
            "get": {
                "description": "Get Transactions with Page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transactions with Page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions was found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/{bid}/transaction/{tid}": {
            "get": {
                "description": "Get Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction was found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction was deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "bid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.UpdateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Transaction",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.LoginWithEmailAndPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Create User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created User",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Request is failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "endpoint.CreateAccountTitleRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "endpoint.CreateBookRequest": {
            "type": "object",
            "required": [
                "name",
                "year"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "endpoint.CreateTransactionRequest": {
            "type": "object",
            "required": [
                "description",
                "occured_at",
                "sub_transactions"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "occured_at": {
                    "type": "string"
                },
                "sub_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SubTransaction"
                    }
                }
            }
        },
        "endpoint.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "endpoint.LoginWithEmailAndPassword": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "endpoint.UpdateAccountTitleRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "endpoint.UpdateBookRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "endpoint.UpdateTransactionRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "occured_at": {
                    "type": "string"
                },
                "sub_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SubTransaction"
                    }
                }
            }
        },
        "model.AccountTitle": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "book_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sub_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SubTransaction"
                    }
                },
                "title_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.SubTransaction": {
            "type": "object",
            "properties": {
                "account_title": {
                    "$ref": "#/definitions/model.AccountTitle"
                },
                "account_title_id": {
                    "type": "integer"
                },
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "is_debit": {
                    "type": "boolean"
                },
                "sub_transaction_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "PLAccounting API",
	Description:      "This is a PLAccounting API Server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
