definitions:
  endpoint.CreateAccountTitleRequest:
    properties:
      amount:
        type: integer
      name:
        type: string
      type:
        type: integer
    required:
    - name
    type: object
  endpoint.CreateBookRequest:
    properties:
      name:
        type: string
      year:
        type: integer
    required:
    - name
    - year
    type: object
  endpoint.CreateTransactionRequest:
    properties:
      description:
        type: string
      occured_at:
        type: string
      sub_transactions:
        items:
          $ref: '#/definitions/model.SubTransaction'
        type: array
    required:
    - description
    - occured_at
    - sub_transactions
    type: object
  endpoint.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  endpoint.LoginWithEmailAndPassword:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  endpoint.UpdateAccountTitleRequest:
    properties:
      amount:
        type: integer
      name:
        type: string
      type:
        type: integer
    type: object
  endpoint.UpdateBookRequest:
    properties:
      name:
        type: string
      year:
        type: integer
    type: object
  endpoint.UpdateTransactionRequest:
    properties:
      description:
        type: string
      occured_at:
        type: string
      sub_transactions:
        items:
          $ref: '#/definitions/model.SubTransaction'
        type: array
    type: object
  model.AccountTitle:
    properties:
      amount:
        type: integer
      amount_base:
        type: integer
      book_id:
        type: string
      created_at:
        type: string
      name:
        type: string
      sub_transactions:
        items:
          $ref: '#/definitions/model.SubTransaction'
        type: array
      title_id:
        type: integer
      type:
        type: integer
      updated_at:
        type: string
    type: object
  model.SubTransaction:
    properties:
      account_title:
        $ref: '#/definitions/model.AccountTitle'
      account_title_id:
        type: integer
      amount:
        type: integer
      created_at:
        type: string
      is_debit:
        type: boolean
      sub_transaction_id:
        type: integer
      updated_at:
        type: string
    type: object
info:
  contact: {}
  description: This is a PLAccounting API Server.
  title: PLAccounting API
  version: v1
paths:
  /book:
    get:
      consumes:
      - application/json
      description: Get All Books
      produces:
      - application/json
      responses:
        "200":
          description: Get All Books
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get All Books
      tags:
      - Book
    post:
      consumes:
      - application/json
      description: Create Book
      parameters:
      - description: Create Book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/endpoint.CreateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created Book
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Create Book
      tags:
      - Book
  /book/{bid}:
    delete:
      consumes:
      - application/json
      description: Delete Book
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete Book
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Delete Book
      tags:
      - Book
    get:
      consumes:
      - application/json
      description: Get Book
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get Book
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get Book
      tags:
      - Book
    patch:
      consumes:
      - application/json
      description: Update Book
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Update Book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/endpoint.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update Book
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Update Book
      tags:
      - Book
  /book/{bid}/accountTitle:
    get:
      consumes:
      - application/json
      description: Get All Account Titles
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get All Account Titles
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get All Account Titles
      tags:
      - Account Title
    post:
      consumes:
      - application/json
      description: Create Account Title
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Create Account Title
        in: body
        name: accountTitle
        required: true
        schema:
          $ref: '#/definitions/endpoint.CreateAccountTitleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Create Account Title
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Create Account Title
      tags:
      - Account Title
  /book/{bid}/accountTitle/{tid}:
    delete:
      consumes:
      - application/json
      description: Delete Account Title
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Account Title ID
        in: path
        name: tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete Account Title
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Delete Account Title
      tags:
      - Account Title
    get:
      consumes:
      - application/json
      description: Get Account Title
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Account Title ID
        in: path
        name: tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get Account Title
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get Account Title
      tags:
      - Account Title
    patch:
      consumes:
      - application/json
      description: Update Account Title
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Account Title ID
        in: path
        name: tid
        required: true
        type: string
      - description: Update Account Title
        in: body
        name: accountTitle
        required: true
        schema:
          $ref: '#/definitions/endpoint.UpdateAccountTitleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update Account Title
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Update Account Title
      tags:
      - Account Title
  /book/{bid}/accountTitle/{tid}/transactions:
    get:
      consumes:
      - application/json
      description: Get Sub Transactions from Account Title
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Account Title ID
        in: path
        name: tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sub Transactions was found
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get Sub Transactions from Account Title
      tags:
      - Sub Transaction
  /book/{bid}/accountTitle/{tid}/transactions/{pid}:
    get:
      consumes:
      - application/json
      description: Get Sub Transactions from Account Title with Page
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Account Title ID
        in: path
        name: tid
        required: true
        type: string
      - description: Page ID
        in: path
        name: pid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sub Transactions was found
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get Sub Transactions from Account Title with Page
      tags:
      - Sub Transaction
  /book/{bid}/transaction:
    get:
      consumes:
      - application/json
      description: Get Transactions
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transactions was found
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get Transactions
      tags:
      - Transaction
    post:
      consumes:
      - application/json
      description: Create Transaction
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Create Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/endpoint.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created Transaction
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Create Transaction
      tags:
      - Transaction
  /book/{bid}/transaction/{tid}:
    delete:
      consumes:
      - application/json
      description: Delete Transaction
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction was deleted
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Delete Transaction
      tags:
      - Transaction
    get:
      consumes:
      - application/json
      description: Get Transaction
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction was found
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get Transaction
      tags:
      - Transaction
    patch:
      consumes:
      - application/json
      description: Update Transaction
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: tid
        required: true
        type: string
      - description: Update Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/endpoint.UpdateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Transaction
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Update Transaction
      tags:
      - Transaction
  /book/{bid}/transaction/page/{pid}:
    get:
      consumes:
      - application/json
      description: Get Transactions with Page
      parameters:
      - description: Book ID
        in: path
        name: bid
        required: true
        type: string
      - description: Page ID
        in: path
        name: pid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transactions was found
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Get Transactions with Page
      tags:
      - Transaction
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/endpoint.LoginWithEmailAndPassword'
      produces:
      - application/json
      responses:
        "200":
          description: Login
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Login
      tags:
      - User
  /ping:
    get:
      consumes:
      - application/json
      description: Ping
      produces:
      - application/json
      responses:
        "200":
          description: pong
          schema:
            type: string
      summary: Ping
      tags:
      - Ping
  /user:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/endpoint.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created User
          schema:
            type: string
        "400":
          description: Request is failed
          schema:
            type: string
      summary: Create User
      tags:
      - User
swagger: "2.0"
